{"payload":{"allShortcutsEnabled":false,"fileTree":{"megatron/core/tensor_parallel":{"items":[{"name":"__init__.py","path":"megatron/core/tensor_parallel/__init__.py","contentType":"file"},{"name":"cross_entropy.py","path":"megatron/core/tensor_parallel/cross_entropy.py","contentType":"file"},{"name":"data.py","path":"megatron/core/tensor_parallel/data.py","contentType":"file"},{"name":"layers.py","path":"megatron/core/tensor_parallel/layers.py","contentType":"file"},{"name":"mappings.py","path":"megatron/core/tensor_parallel/mappings.py","contentType":"file"},{"name":"random.py","path":"megatron/core/tensor_parallel/random.py","contentType":"file"},{"name":"utils.py","path":"megatron/core/tensor_parallel/utils.py","contentType":"file"}],"totalCount":7},"megatron/core":{"items":[{"name":"dist_checkpointing","path":"megatron/core/dist_checkpointing","contentType":"directory"},{"name":"fusions","path":"megatron/core/fusions","contentType":"directory"},{"name":"models","path":"megatron/core/models","contentType":"directory"},{"name":"pipeline_parallel","path":"megatron/core/pipeline_parallel","contentType":"directory"},{"name":"tensor_parallel","path":"megatron/core/tensor_parallel","contentType":"directory"},{"name":"transformer","path":"megatron/core/transformer","contentType":"directory"},{"name":"README.md","path":"megatron/core/README.md","contentType":"file"},{"name":"__init__.py","path":"megatron/core/__init__.py","contentType":"file"},{"name":"enums.py","path":"megatron/core/enums.py","contentType":"file"},{"name":"inference_params.py","path":"megatron/core/inference_params.py","contentType":"file"},{"name":"model_parallel_config.py","path":"megatron/core/model_parallel_config.py","contentType":"file"},{"name":"package_info.py","path":"megatron/core/package_info.py","contentType":"file"},{"name":"parallel_state.py","path":"megatron/core/parallel_state.py","contentType":"file"},{"name":"requirements.txt","path":"megatron/core/requirements.txt","contentType":"file"},{"name":"utils.py","path":"megatron/core/utils.py","contentType":"file"}],"totalCount":15},"megatron":{"items":[{"name":"core","path":"megatron/core","contentType":"directory"},{"name":"data","path":"megatron/data","contentType":"directory"},{"name":"fp16_deprecated","path":"megatron/fp16_deprecated","contentType":"directory"},{"name":"fused_kernels","path":"megatron/fused_kernels","contentType":"directory"},{"name":"model","path":"megatron/model","contentType":"directory"},{"name":"mpu","path":"megatron/mpu","contentType":"directory"},{"name":"optimizer","path":"megatron/optimizer","contentType":"directory"},{"name":"static","path":"megatron/static","contentType":"directory"},{"name":"text_generation","path":"megatron/text_generation","contentType":"directory"},{"name":"tokenizer","path":"megatron/tokenizer","contentType":"directory"},{"name":"__init__.py","path":"megatron/__init__.py","contentType":"file"},{"name":"arguments.py","path":"megatron/arguments.py","contentType":"file"},{"name":"checkpointing.py","path":"megatron/checkpointing.py","contentType":"file"},{"name":"dist_signal_handler.py","path":"megatron/dist_signal_handler.py","contentType":"file"},{"name":"global_vars.py","path":"megatron/global_vars.py","contentType":"file"},{"name":"indexer.py","path":"megatron/indexer.py","contentType":"file"},{"name":"initialize.py","path":"megatron/initialize.py","contentType":"file"},{"name":"memory.py","path":"megatron/memory.py","contentType":"file"},{"name":"microbatches.py","path":"megatron/microbatches.py","contentType":"file"},{"name":"optimizer_param_scheduler.py","path":"megatron/optimizer_param_scheduler.py","contentType":"file"},{"name":"text_generation_server.py","path":"megatron/text_generation_server.py","contentType":"file"},{"name":"timers.py","path":"megatron/timers.py","contentType":"file"},{"name":"training.py","path":"megatron/training.py","contentType":"file"},{"name":"utils.py","path":"megatron/utils.py","contentType":"file"}],"totalCount":24},"":{"items":[{"name":".github","path":".github","contentType":"directory"},{"name":"docs","path":"docs","contentType":"directory"},{"name":"examples","path":"examples","contentType":"directory"},{"name":"images","path":"images","contentType":"directory"},{"name":"megatron","path":"megatron","contentType":"directory"},{"name":"tasks","path":"tasks","contentType":"directory"},{"name":"tests","path":"tests","contentType":"directory"},{"name":"tools","path":"tools","contentType":"directory"},{"name":".coveragerc","path":".coveragerc","contentType":"file"},{"name":".gitignore","path":".gitignore","contentType":"file"},{"name":".gitlab-ci.yml","path":".gitlab-ci.yml","contentType":"file"},{"name":"CONTRIBUTING.md","path":"CONTRIBUTING.md","contentType":"file"},{"name":"LICENSE","path":"LICENSE","contentType":"file"},{"name":"README.md","path":"README.md","contentType":"file"},{"name":"pretrain_bert.py","path":"pretrain_bert.py","contentType":"file"},{"name":"pretrain_gpt.py","path":"pretrain_gpt.py","contentType":"file"},{"name":"pretrain_gpt_core.py","path":"pretrain_gpt_core.py","contentType":"file"},{"name":"pretrain_ict.py","path":"pretrain_ict.py","contentType":"file"},{"name":"pretrain_retro.py","path":"pretrain_retro.py","contentType":"file"},{"name":"pretrain_t5.py","path":"pretrain_t5.py","contentType":"file"},{"name":"pretrain_vision_classify.py","path":"pretrain_vision_classify.py","contentType":"file"},{"name":"pretrain_vision_dino.py","path":"pretrain_vision_dino.py","contentType":"file"},{"name":"pretrain_vision_inpaint.py","path":"pretrain_vision_inpaint.py","contentType":"file"},{"name":"pyproject.toml","path":"pyproject.toml","contentType":"file"},{"name":"setup.py","path":"setup.py","contentType":"file"}],"totalCount":25}},"fileTreeProcessingTime":25.128808999999997,"foldersToFetch":[],"reducedMotionEnabled":null,"repo":{"id":699542894,"defaultBranch":"main","name":"Megatron-AxoNN","ownerLogin":"axonn-ai","currentUserCanPush":false,"isFork":true,"isEmpty":false,"createdAt":"2023-10-02T20:55:35.000Z","ownerAvatar":"https://avatars.githubusercontent.com/u/134307357?v=4","public":true,"private":false,"isOrgOwned":true},"symbolsExpanded":false,"treeExpanded":true,"refInfo":{"name":"main","listCacheKey":"v0:1701028183.0","canEdit":false,"refType":"branch","currentOid":"817f6344867d6294f1fe17d1580955d54ea65f86"},"path":"megatron/core/tensor_parallel/data.py","currentUser":null,"blob":{"rawLines":["# Copyright (c) 2022, NVIDIA CORPORATION. All rights reserved.","","import torch","","from megatron.core.parallel_state import (","    get_tensor_model_parallel_group,","    get_tensor_model_parallel_rank,","    get_tensor_model_parallel_src_rank,",")","","_MAX_DATA_DIM = 5","","","def _check_data_types(keys, data, target_dtype):","    \"\"\"Check that all the keys have the same target data type.\"\"\"","    for key in keys:","        assert data[key].dtype == target_dtype, (","            '{} has data type {} which '","            'is different than {}'.format(key, data[key].dtype, target_dtype)","        )","","","def _build_key_size_numel_dictionaries(keys, data):","    \"\"\"Build the size on rank 0 and broadcast.\"\"\"","    max_dim = _MAX_DATA_DIM","    sizes = [0 for _ in range(max_dim) for _ in keys]","","    # Pack the sizes on rank zero.","    if get_tensor_model_parallel_rank() == 0:","        offset = 0","        for key in keys:","            assert data[key].dim() < max_dim, 'you should increase MAX_DATA_DIM'","            size = data[key].size()","            for i, s in enumerate(size):","                sizes[i + offset] = s","            offset += max_dim","","    # Move to GPU and broadcast.","    sizes_cuda = torch.cuda.LongTensor(sizes)","    torch.distributed.broadcast(","        sizes_cuda, get_tensor_model_parallel_src_rank(), group=get_tensor_model_parallel_group()","    )","","    # Move back to cpu and unpack.","    sizes_cpu = sizes_cuda.cpu()","    key_size = {}","    key_numel = {}","    total_numel = 0","    offset = 0","    for key in keys:","        i = 0","        size = []","        numel = 1","        while sizes_cpu[offset + i] > 0:","            this_size = sizes_cpu[offset + i]","            size.append(this_size)","            numel *= this_size","            i += 1","        key_size[key] = size","        key_numel[key] = numel","        total_numel += numel","        offset += max_dim","","    return key_size, key_numel, total_numel","","","def broadcast_data(keys, data, datatype):","    \"\"\"Broadcast data from rank zero of each model parallel group to the","    members of the same model parallel group.","","    Arguments:","        keys: list of keys in the data disctionary to be broadcasted","        data: data dictionary of string keys and cpu tensor values.","        datatype: torch data type of all tensors in data associated","                  with keys.","    \"\"\"","    # Build (key, size) and (key, number of elements) dictionaries along","    # with the total number of elements on all ranks.","    key_size, key_numel, total_numel = _build_key_size_numel_dictionaries(keys, data)","","    # Pack on rank zero.","    if get_tensor_model_parallel_rank() == 0:","        # Check that all keys have the same data type.","        _check_data_types(keys, data, datatype)","        # Flatten the data associated with the keys","        flatten_data = torch.cat([data[key].contiguous().view(-1) for key in keys], dim=0).cuda()","    else:","        flatten_data = torch.empty(total_numel, device=torch.cuda.current_device(), dtype=datatype)","","    # Broadcast","    torch.distributed.broadcast(","        flatten_data, get_tensor_model_parallel_src_rank(), group=get_tensor_model_parallel_group()","    )","","    # Unpack","    output = {}","    offset = 0","    for key in keys:","        size = key_size[key]","        numel = key_numel[key]","        output[key] = flatten_data.narrow(0, offset, numel).view(size)","        offset += numel","","    return output"],"stylingDirectives":[[{"start":0,"end":62,"cssClass":"pl-c"}],[],[{"start":0,"end":6,"cssClass":"pl-k"},{"start":7,"end":12,"cssClass":"pl-s1"}],[],[{"start":0,"end":4,"cssClass":"pl-k"},{"start":5,"end":13,"cssClass":"pl-s1"},{"start":14,"end":18,"cssClass":"pl-s1"},{"start":19,"end":33,"cssClass":"pl-s1"},{"start":34,"end":40,"cssClass":"pl-k"}],[{"start":4,"end":35,"cssClass":"pl-s1"}],[{"start":4,"end":34,"cssClass":"pl-s1"}],[{"start":4,"end":38,"cssClass":"pl-s1"}],[],[],[{"start":0,"end":13,"cssClass":"pl-s1"},{"start":14,"end":15,"cssClass":"pl-c1"},{"start":16,"end":17,"cssClass":"pl-c1"}],[],[],[{"start":0,"end":3,"cssClass":"pl-k"},{"start":4,"end":21,"cssClass":"pl-en"},{"start":22,"end":26,"cssClass":"pl-s1"},{"start":28,"end":32,"cssClass":"pl-s1"},{"start":34,"end":46,"cssClass":"pl-s1"}],[{"start":4,"end":65,"cssClass":"pl-s"}],[{"start":4,"end":7,"cssClass":"pl-k"},{"start":8,"end":11,"cssClass":"pl-s1"},{"start":12,"end":14,"cssClass":"pl-c1"},{"start":15,"end":19,"cssClass":"pl-s1"}],[{"start":8,"end":14,"cssClass":"pl-k"},{"start":15,"end":19,"cssClass":"pl-s1"},{"start":20,"end":23,"cssClass":"pl-s1"},{"start":25,"end":30,"cssClass":"pl-s1"},{"start":31,"end":33,"cssClass":"pl-c1"},{"start":34,"end":46,"cssClass":"pl-s1"}],[{"start":12,"end":40,"cssClass":"pl-s"}],[{"start":12,"end":34,"cssClass":"pl-s"},{"start":35,"end":41,"cssClass":"pl-en"},{"start":42,"end":45,"cssClass":"pl-s1"},{"start":47,"end":51,"cssClass":"pl-s1"},{"start":52,"end":55,"cssClass":"pl-s1"},{"start":57,"end":62,"cssClass":"pl-s1"},{"start":64,"end":76,"cssClass":"pl-s1"}],[],[],[],[{"start":0,"end":3,"cssClass":"pl-k"},{"start":4,"end":38,"cssClass":"pl-en"},{"start":39,"end":43,"cssClass":"pl-s1"},{"start":45,"end":49,"cssClass":"pl-s1"}],[{"start":4,"end":49,"cssClass":"pl-s"}],[{"start":4,"end":11,"cssClass":"pl-s1"},{"start":12,"end":13,"cssClass":"pl-c1"},{"start":14,"end":27,"cssClass":"pl-s1"}],[{"start":4,"end":9,"cssClass":"pl-s1"},{"start":10,"end":11,"cssClass":"pl-c1"},{"start":13,"end":14,"cssClass":"pl-c1"},{"start":15,"end":18,"cssClass":"pl-k"},{"start":19,"end":20,"cssClass":"pl-s1"},{"start":21,"end":23,"cssClass":"pl-c1"},{"start":24,"end":29,"cssClass":"pl-en"},{"start":30,"end":37,"cssClass":"pl-s1"},{"start":39,"end":42,"cssClass":"pl-k"},{"start":43,"end":44,"cssClass":"pl-s1"},{"start":45,"end":47,"cssClass":"pl-c1"},{"start":48,"end":52,"cssClass":"pl-s1"}],[],[{"start":4,"end":34,"cssClass":"pl-c"}],[{"start":4,"end":6,"cssClass":"pl-k"},{"start":7,"end":37,"cssClass":"pl-en"},{"start":40,"end":42,"cssClass":"pl-c1"},{"start":43,"end":44,"cssClass":"pl-c1"}],[{"start":8,"end":14,"cssClass":"pl-s1"},{"start":15,"end":16,"cssClass":"pl-c1"},{"start":17,"end":18,"cssClass":"pl-c1"}],[{"start":8,"end":11,"cssClass":"pl-k"},{"start":12,"end":15,"cssClass":"pl-s1"},{"start":16,"end":18,"cssClass":"pl-c1"},{"start":19,"end":23,"cssClass":"pl-s1"}],[{"start":12,"end":18,"cssClass":"pl-k"},{"start":19,"end":23,"cssClass":"pl-s1"},{"start":24,"end":27,"cssClass":"pl-s1"},{"start":29,"end":32,"cssClass":"pl-en"},{"start":35,"end":36,"cssClass":"pl-c1"},{"start":37,"end":44,"cssClass":"pl-s1"},{"start":46,"end":80,"cssClass":"pl-s"}],[{"start":12,"end":16,"cssClass":"pl-s1"},{"start":17,"end":18,"cssClass":"pl-c1"},{"start":19,"end":23,"cssClass":"pl-s1"},{"start":24,"end":27,"cssClass":"pl-s1"},{"start":29,"end":33,"cssClass":"pl-en"}],[{"start":12,"end":15,"cssClass":"pl-k"},{"start":16,"end":17,"cssClass":"pl-s1"},{"start":19,"end":20,"cssClass":"pl-s1"},{"start":21,"end":23,"cssClass":"pl-c1"},{"start":24,"end":33,"cssClass":"pl-en"},{"start":34,"end":38,"cssClass":"pl-s1"}],[{"start":16,"end":21,"cssClass":"pl-s1"},{"start":22,"end":23,"cssClass":"pl-s1"},{"start":24,"end":25,"cssClass":"pl-c1"},{"start":26,"end":32,"cssClass":"pl-s1"},{"start":34,"end":35,"cssClass":"pl-c1"},{"start":36,"end":37,"cssClass":"pl-s1"}],[{"start":12,"end":18,"cssClass":"pl-s1"},{"start":19,"end":21,"cssClass":"pl-c1"},{"start":22,"end":29,"cssClass":"pl-s1"}],[],[{"start":4,"end":32,"cssClass":"pl-c"}],[{"start":4,"end":14,"cssClass":"pl-s1"},{"start":15,"end":16,"cssClass":"pl-c1"},{"start":17,"end":22,"cssClass":"pl-s1"},{"start":23,"end":27,"cssClass":"pl-s1"},{"start":28,"end":38,"cssClass":"pl-v"},{"start":39,"end":44,"cssClass":"pl-s1"}],[{"start":4,"end":9,"cssClass":"pl-s1"},{"start":10,"end":21,"cssClass":"pl-s1"},{"start":22,"end":31,"cssClass":"pl-en"}],[{"start":8,"end":18,"cssClass":"pl-s1"},{"start":20,"end":54,"cssClass":"pl-en"},{"start":58,"end":63,"cssClass":"pl-s1"},{"start":63,"end":64,"cssClass":"pl-c1"},{"start":64,"end":95,"cssClass":"pl-en"}],[],[],[{"start":4,"end":34,"cssClass":"pl-c"}],[{"start":4,"end":13,"cssClass":"pl-s1"},{"start":14,"end":15,"cssClass":"pl-c1"},{"start":16,"end":26,"cssClass":"pl-s1"},{"start":27,"end":30,"cssClass":"pl-en"}],[{"start":4,"end":12,"cssClass":"pl-s1"},{"start":13,"end":14,"cssClass":"pl-c1"}],[{"start":4,"end":13,"cssClass":"pl-s1"},{"start":14,"end":15,"cssClass":"pl-c1"}],[{"start":4,"end":15,"cssClass":"pl-s1"},{"start":16,"end":17,"cssClass":"pl-c1"},{"start":18,"end":19,"cssClass":"pl-c1"}],[{"start":4,"end":10,"cssClass":"pl-s1"},{"start":11,"end":12,"cssClass":"pl-c1"},{"start":13,"end":14,"cssClass":"pl-c1"}],[{"start":4,"end":7,"cssClass":"pl-k"},{"start":8,"end":11,"cssClass":"pl-s1"},{"start":12,"end":14,"cssClass":"pl-c1"},{"start":15,"end":19,"cssClass":"pl-s1"}],[{"start":8,"end":9,"cssClass":"pl-s1"},{"start":10,"end":11,"cssClass":"pl-c1"},{"start":12,"end":13,"cssClass":"pl-c1"}],[{"start":8,"end":12,"cssClass":"pl-s1"},{"start":13,"end":14,"cssClass":"pl-c1"}],[{"start":8,"end":13,"cssClass":"pl-s1"},{"start":14,"end":15,"cssClass":"pl-c1"},{"start":16,"end":17,"cssClass":"pl-c1"}],[{"start":8,"end":13,"cssClass":"pl-k"},{"start":14,"end":23,"cssClass":"pl-s1"},{"start":24,"end":30,"cssClass":"pl-s1"},{"start":31,"end":32,"cssClass":"pl-c1"},{"start":33,"end":34,"cssClass":"pl-s1"},{"start":36,"end":37,"cssClass":"pl-c1"},{"start":38,"end":39,"cssClass":"pl-c1"}],[{"start":12,"end":21,"cssClass":"pl-s1"},{"start":22,"end":23,"cssClass":"pl-c1"},{"start":24,"end":33,"cssClass":"pl-s1"},{"start":34,"end":40,"cssClass":"pl-s1"},{"start":41,"end":42,"cssClass":"pl-c1"},{"start":43,"end":44,"cssClass":"pl-s1"}],[{"start":12,"end":16,"cssClass":"pl-s1"},{"start":17,"end":23,"cssClass":"pl-en"},{"start":24,"end":33,"cssClass":"pl-s1"}],[{"start":12,"end":17,"cssClass":"pl-s1"},{"start":18,"end":20,"cssClass":"pl-c1"},{"start":21,"end":30,"cssClass":"pl-s1"}],[{"start":12,"end":13,"cssClass":"pl-s1"},{"start":14,"end":16,"cssClass":"pl-c1"},{"start":17,"end":18,"cssClass":"pl-c1"}],[{"start":8,"end":16,"cssClass":"pl-s1"},{"start":17,"end":20,"cssClass":"pl-s1"},{"start":22,"end":23,"cssClass":"pl-c1"},{"start":24,"end":28,"cssClass":"pl-s1"}],[{"start":8,"end":17,"cssClass":"pl-s1"},{"start":18,"end":21,"cssClass":"pl-s1"},{"start":23,"end":24,"cssClass":"pl-c1"},{"start":25,"end":30,"cssClass":"pl-s1"}],[{"start":8,"end":19,"cssClass":"pl-s1"},{"start":20,"end":22,"cssClass":"pl-c1"},{"start":23,"end":28,"cssClass":"pl-s1"}],[{"start":8,"end":14,"cssClass":"pl-s1"},{"start":15,"end":17,"cssClass":"pl-c1"},{"start":18,"end":25,"cssClass":"pl-s1"}],[],[{"start":4,"end":10,"cssClass":"pl-k"},{"start":11,"end":19,"cssClass":"pl-s1"},{"start":21,"end":30,"cssClass":"pl-s1"},{"start":32,"end":43,"cssClass":"pl-s1"}],[],[],[{"start":0,"end":3,"cssClass":"pl-k"},{"start":4,"end":18,"cssClass":"pl-en"},{"start":19,"end":23,"cssClass":"pl-s1"},{"start":25,"end":29,"cssClass":"pl-s1"},{"start":31,"end":39,"cssClass":"pl-s1"}],[{"start":4,"end":72,"cssClass":"pl-s"}],[{"start":0,"end":45,"cssClass":"pl-s"}],[{"start":0,"end":0,"cssClass":"pl-s"}],[{"start":0,"end":14,"cssClass":"pl-s"}],[{"start":0,"end":68,"cssClass":"pl-s"}],[{"start":0,"end":67,"cssClass":"pl-s"}],[{"start":0,"end":67,"cssClass":"pl-s"}],[{"start":0,"end":28,"cssClass":"pl-s"}],[{"start":0,"end":7,"cssClass":"pl-s"}],[{"start":4,"end":72,"cssClass":"pl-c"}],[{"start":4,"end":53,"cssClass":"pl-c"}],[{"start":4,"end":12,"cssClass":"pl-s1"},{"start":14,"end":23,"cssClass":"pl-s1"},{"start":25,"end":36,"cssClass":"pl-s1"},{"start":37,"end":38,"cssClass":"pl-c1"},{"start":39,"end":73,"cssClass":"pl-en"},{"start":74,"end":78,"cssClass":"pl-s1"},{"start":80,"end":84,"cssClass":"pl-s1"}],[],[{"start":4,"end":24,"cssClass":"pl-c"}],[{"start":4,"end":6,"cssClass":"pl-k"},{"start":7,"end":37,"cssClass":"pl-en"},{"start":40,"end":42,"cssClass":"pl-c1"},{"start":43,"end":44,"cssClass":"pl-c1"}],[{"start":8,"end":54,"cssClass":"pl-c"}],[{"start":8,"end":25,"cssClass":"pl-en"},{"start":26,"end":30,"cssClass":"pl-s1"},{"start":32,"end":36,"cssClass":"pl-s1"},{"start":38,"end":46,"cssClass":"pl-s1"}],[{"start":8,"end":51,"cssClass":"pl-c"}],[{"start":8,"end":20,"cssClass":"pl-s1"},{"start":21,"end":22,"cssClass":"pl-c1"},{"start":23,"end":28,"cssClass":"pl-s1"},{"start":29,"end":32,"cssClass":"pl-en"},{"start":34,"end":38,"cssClass":"pl-s1"},{"start":39,"end":42,"cssClass":"pl-s1"},{"start":44,"end":54,"cssClass":"pl-en"},{"start":57,"end":61,"cssClass":"pl-en"},{"start":62,"end":63,"cssClass":"pl-c1"},{"start":63,"end":64,"cssClass":"pl-c1"},{"start":66,"end":69,"cssClass":"pl-k"},{"start":70,"end":73,"cssClass":"pl-s1"},{"start":74,"end":76,"cssClass":"pl-c1"},{"start":77,"end":81,"cssClass":"pl-s1"},{"start":84,"end":87,"cssClass":"pl-s1"},{"start":87,"end":88,"cssClass":"pl-c1"},{"start":88,"end":89,"cssClass":"pl-c1"},{"start":91,"end":95,"cssClass":"pl-en"}],[{"start":4,"end":8,"cssClass":"pl-k"}],[{"start":8,"end":20,"cssClass":"pl-s1"},{"start":21,"end":22,"cssClass":"pl-c1"},{"start":23,"end":28,"cssClass":"pl-s1"},{"start":29,"end":34,"cssClass":"pl-en"},{"start":35,"end":46,"cssClass":"pl-s1"},{"start":48,"end":54,"cssClass":"pl-s1"},{"start":54,"end":55,"cssClass":"pl-c1"},{"start":55,"end":60,"cssClass":"pl-s1"},{"start":61,"end":65,"cssClass":"pl-s1"},{"start":66,"end":80,"cssClass":"pl-en"},{"start":84,"end":89,"cssClass":"pl-s1"},{"start":89,"end":90,"cssClass":"pl-c1"},{"start":90,"end":98,"cssClass":"pl-s1"}],[],[{"start":4,"end":15,"cssClass":"pl-c"}],[{"start":4,"end":9,"cssClass":"pl-s1"},{"start":10,"end":21,"cssClass":"pl-s1"},{"start":22,"end":31,"cssClass":"pl-en"}],[{"start":8,"end":20,"cssClass":"pl-s1"},{"start":22,"end":56,"cssClass":"pl-en"},{"start":60,"end":65,"cssClass":"pl-s1"},{"start":65,"end":66,"cssClass":"pl-c1"},{"start":66,"end":97,"cssClass":"pl-en"}],[],[],[{"start":4,"end":12,"cssClass":"pl-c"}],[{"start":4,"end":10,"cssClass":"pl-s1"},{"start":11,"end":12,"cssClass":"pl-c1"}],[{"start":4,"end":10,"cssClass":"pl-s1"},{"start":11,"end":12,"cssClass":"pl-c1"},{"start":13,"end":14,"cssClass":"pl-c1"}],[{"start":4,"end":7,"cssClass":"pl-k"},{"start":8,"end":11,"cssClass":"pl-s1"},{"start":12,"end":14,"cssClass":"pl-c1"},{"start":15,"end":19,"cssClass":"pl-s1"}],[{"start":8,"end":12,"cssClass":"pl-s1"},{"start":13,"end":14,"cssClass":"pl-c1"},{"start":15,"end":23,"cssClass":"pl-s1"},{"start":24,"end":27,"cssClass":"pl-s1"}],[{"start":8,"end":13,"cssClass":"pl-s1"},{"start":14,"end":15,"cssClass":"pl-c1"},{"start":16,"end":25,"cssClass":"pl-s1"},{"start":26,"end":29,"cssClass":"pl-s1"}],[{"start":8,"end":14,"cssClass":"pl-s1"},{"start":15,"end":18,"cssClass":"pl-s1"},{"start":20,"end":21,"cssClass":"pl-c1"},{"start":22,"end":34,"cssClass":"pl-s1"},{"start":35,"end":41,"cssClass":"pl-en"},{"start":42,"end":43,"cssClass":"pl-c1"},{"start":45,"end":51,"cssClass":"pl-s1"},{"start":53,"end":58,"cssClass":"pl-s1"},{"start":60,"end":64,"cssClass":"pl-en"},{"start":65,"end":69,"cssClass":"pl-s1"}],[{"start":8,"end":14,"cssClass":"pl-s1"},{"start":15,"end":17,"cssClass":"pl-c1"},{"start":18,"end":23,"cssClass":"pl-s1"}],[],[{"start":4,"end":10,"cssClass":"pl-k"},{"start":11,"end":17,"cssClass":"pl-s1"}]],"csv":null,"csvError":null,"dependabotInfo":{"showConfigurationBanner":false,"configFilePath":null,"networkDependabotPath":"/axonn-ai/Megatron-AxoNN/network/updates","dismissConfigurationNoticePath":"/settings/dismiss-notice/dependabot_configuration_notice","configurationNoticeDismissed":null,"repoAlertsPath":"/axonn-ai/Megatron-AxoNN/security/dependabot","repoSecurityAndAnalysisPath":"/axonn-ai/Megatron-AxoNN/settings/security_analysis","repoOwnerIsOrg":true,"currentUserCanAdminRepo":false},"displayName":"data.py","displayUrl":"https://github.com/axonn-ai/Megatron-AxoNN/blob/main/megatron/core/tensor_parallel/data.py?raw=true","headerInfo":{"blobSize":"3.26 KB","deleteInfo":{"deleteTooltip":"You must be signed in to make or propose changes"},"editInfo":{"editTooltip":"You must be signed in to make or propose changes"},"ghDesktopPath":"https://desktop.github.com","gitLfsPath":null,"onBranch":true,"shortPath":"45c4fe7","siteNavLoginPath":"/login?return_to=https%3A%2F%2Fgithub.com%2Faxonn-ai%2FMegatron-AxoNN%2Fblob%2Fmain%2Fmegatron%2Fcore%2Ftensor_parallel%2Fdata.py","isCSV":false,"isRichtext":false,"toc":null,"lineInfo":{"truncatedLoc":"104","truncatedSloc":"86"},"mode":"file"},"image":false,"isCodeownersFile":null,"isPlain":false,"isValidLegacyIssueTemplate":false,"issueTemplateHelpUrl":"https://docs.github.com/articles/about-issue-and-pull-request-templates","issueTemplate":null,"discussionTemplate":null,"language":"Python","languageID":303,"large":false,"loggedIn":false,"newDiscussionPath":"/axonn-ai/Megatron-AxoNN/discussions/new","newIssuePath":"/axonn-ai/Megatron-AxoNN/issues/new","planSupportInfo":{"repoIsFork":null,"repoOwnedByCurrentUser":null,"requestFullPath":"/axonn-ai/Megatron-AxoNN/blob/main/megatron/core/tensor_parallel/data.py","showFreeOrgGatedFeatureMessage":null,"showPlanSupportBanner":null,"upgradeDataAttributes":null,"upgradePath":null},"publishBannersInfo":{"dismissActionNoticePath":"/settings/dismiss-notice/publish_action_from_dockerfile","dismissStackNoticePath":"/settings/dismiss-notice/publish_stack_from_file","releasePath":"/axonn-ai/Megatron-AxoNN/releases/new?marketplace=true","showPublishActionBanner":false,"showPublishStackBanner":false},"rawBlobUrl":"https://github.com/axonn-ai/Megatron-AxoNN/raw/main/megatron/core/tensor_parallel/data.py","renderImageOrRaw":false,"richText":null,"renderedFileInfo":null,"shortPath":null,"tabSize":8,"topBannersInfo":{"overridingGlobalFundingFile":false,"globalPreferredFundingPath":null,"repoOwner":"axonn-ai","repoName":"Megatron-AxoNN","showInvalidCitationWarning":false,"citationHelpUrl":"https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/creating-a-repository-on-github/about-citation-files","showDependabotConfigurationBanner":false,"actionsOnboardingTip":null},"truncated":false,"viewable":true,"workflowRedirectUrl":null,"symbols":{"timedOut":false,"notAnalyzed":false,"symbols":[{"name":"_MAX_DATA_DIM","kind":"constant","identStart":237,"identEnd":250,"extentStart":237,"extentEnd":254,"fullyQualifiedName":"_MAX_DATA_DIM","identUtf16":{"start":{"lineNumber":10,"utf16Col":0},"end":{"lineNumber":10,"utf16Col":13}},"extentUtf16":{"start":{"lineNumber":10,"utf16Col":0},"end":{"lineNumber":10,"utf16Col":17}}},{"name":"_check_data_types","kind":"function","identStart":261,"identEnd":278,"extentStart":257,"extentEnd":571,"fullyQualifiedName":"_check_data_types","identUtf16":{"start":{"lineNumber":13,"utf16Col":4},"end":{"lineNumber":13,"utf16Col":21}},"extentUtf16":{"start":{"lineNumber":13,"utf16Col":0},"end":{"lineNumber":19,"utf16Col":9}}},{"name":"_build_key_size_numel_dictionaries","kind":"function","identStart":578,"identEnd":612,"extentStart":574,"extentEnd":1870,"fullyQualifiedName":"_build_key_size_numel_dictionaries","identUtf16":{"start":{"lineNumber":22,"utf16Col":4},"end":{"lineNumber":22,"utf16Col":38}},"extentUtf16":{"start":{"lineNumber":22,"utf16Col":0},"end":{"lineNumber":63,"utf16Col":43}}},{"name":"broadcast_data","kind":"function","identStart":1877,"identEnd":1891,"extentStart":1873,"extentEnd":3335,"fullyQualifiedName":"broadcast_data","identUtf16":{"start":{"lineNumber":66,"utf16Col":4},"end":{"lineNumber":66,"utf16Col":18}},"extentUtf16":{"start":{"lineNumber":66,"utf16Col":0},"end":{"lineNumber":103,"utf16Col":17}}}]}},"copilotInfo":null,"copilotAccessAllowed":false,"csrf_tokens":{"/axonn-ai/Megatron-AxoNN/branches":{"post":"f5b-OIntbzl4X_YemZYbSvX1i0A2y1DrFOL4HdmXvDqAJ5tQp1Z-nj84UJLJZJR-J2GGYORYmD5_7YE-LZl11g"},"/repos/preferences":{"post":"uPOGmVRA0Cru-I52ipxJn7tug7pN7H9Wvfu_h5NwAzLWA0jidIydnRUAPQ4x7njHR9SEOmDKANo5tKZNXjgsBw"}}},"title":"Megatron-AxoNN/megatron/core/tensor_parallel/data.py at main · axonn-ai/Megatron-AxoNN"}